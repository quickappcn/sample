<template>
  <div class="doc-page">

    <text class="xui-demo-head-desc">手机号验证</text>

    <div class="xui-input-group-row">
      <input class="xui-col xui-input-round" type="number" placeholder="请输入手机号码" onchange="verifyPhone"></input>
      <input class="input-btn {{btn_class}}" type="button" value="{{btn_val}}" onclick="sendVerification" disabled="{{btn_class=='disabled'}}"></input>
    </div>

    <div class="xui-input-group-row">
      <input class="xui-col xui-input-round" type="number" placeholder="请输入验证码" onchange="verifyCode"></input>
      <input class="input-btn {{btn_submit_class}}" type="button" value="提交" disabled="{{btn_submit_class=='disabled'}}"></input>
    </div>
  </div>
</template>

<script>
  export default {
    private: {
      btn_class: 'disabled',
      btn_submit_class: 'disabled',
      btn_val: '发送验证码',
      phone: '',
      second: 0
    },
    onInit () {
      this.$page.setTitleBar({ text: '手机号验证' })
    },
    verifyPhone (e) {
      // 手机号码有修改时，校验手机号码
      this.phone = e.text
      // 手机号码有效且发送验证码计时器为0时，允许发送验证码，否则禁止发送验证码
      if (/^1[34578]\d{9}$/.test(this.phone) && !this.second) {
        this.btn_class = ''
      } else {
        this.btn_class = 'disabled'
      }

      // 在手机号码发生改动时，若手机号码为无效号码，禁止提交
      if (!(/^1[34578]\d{9}$/.test(this.phone))) {
        this.btn_submit_class = 'disabled'
      }
    },
    verifyCode (e) {
      // 验证码有修改时，检验验证码
      // 验证码有效切手机号码有效时，允许提交，否则禁止提交
      if (/^\d{6}$/.test(e.text) && /^1[34578]\d{9}$/.test(this.phone)) {
        this.btn_submit_class = ''
      } else {
        this.btn_submit_class = 'disabled'
      }
    },
    sendVerification () {
      const self = this
      // 发送验证码
      if (!self.btn_class) {
        self.second = 60
        self.btn_class = 'disabled'
        self.intervalID = setInterval(self.count.bind(self), 1000)
      }
    },
    count () {
      const self = this
      // 计时器，计时结束后，允许发送验证码
      --self.second
      self.btn_val = self.second + 's后再次发送验证码'
      if (self.second === 0){
        clearInterval(self.intervalID)
        self.btn_class = ''
        self.btn_val = '发送验证码'
      }
    }
  }
</script>

<style>
  @import "../../../common/css/index.css";

  .input-btn {
    background-color: #0faeff;
    color: #ffffff;
    border-radius: 10px;
    margin-left: 30px;
  }

  .disabled {
    background-color: #999999;
  }
</style>
