<template>
  <div class="doc-page">
    <div class="page-title-wrap">
      <text class="page-title">{{componentName}}</text>
    </div>

    <div class="switch-content">
      <text class="item-content-title">滑动切换页面</text>
      <switch class="switch" checked="true" onchange="switchScrollable"></switch>
    </div>

    <!--tab组件-->
    <tabs class="tabs" onchange="changeTabactive" index="2">
      <tab-bar class="tab-bar">
        <text class="tab-text">基础组件</text>
        <text class="tab-text">表单组件</text>
        <text class="tab-text">列表组件</text>
      </tab-bar>

      <tab-content class="tab-content" scrollable="{{scrollable}}">
        <!--基础组件-->
        <div class="item-container">
          <div class="item-content">
            <text class="item-title item-title-first">a</text>
            <a style="color: #09ba07;" href="https://www.quickapp.cn/">链接示例</a>
          </div>

          <div class="item-content">
            <text class="item-title">image</text>
            <image src="pic.webp" class="image"></image>
          </div>

          <div class="item-content">
            <text class="item-title">progerss type="horizontal"</text>
            <progress percent="20" style="margin-top: 20px;color: #0faeff;stroke-width: 10px;"></progress>
          </div>

          <div class="item-content">
            <text class="item-title">progerss type="circular"</text>
            <progress class="circular" type="circular" style="margin-top: 20px;color: #A020F0;"></progress>
          </div>

          <div class="item-content">
            <text class="item-title">text</text>
            <text style="color: #f76160">I am text</text>
          </div>

          <div class="item-content">
            <text class="item-title">span</text>
            <text>
              <span style="color: #09ba07">I am span</span>
            </text>
          </div>
        </div>

        <!--表单组件-->
        <div class="item-container">
          <div class="item-content">
            <text class="item-title item-title-first">input</text>
            <input class="item-input" type="text" placeholder="I am input"/>
          </div>

          <div class="item-content">
            <text class="item-title">picker</text>
            <picker class="item-picker" type="time" value="{{time}}" onchange="setTime"></picker>
          </div>

          <div class="item-content">
            <text class="item-title">slider</text>
            <slider class="item-slider" style="selected-color: #0faeff;" min="50" max="200" value="100"></slider>
          </div>
        </div>

        <!--列表组件-->
        <div class="item-container">
          <input type="button" class="btn" name="" value="切换滚动模式" onclick="switchScrollMode"/>
          <input type="button" class="btn" name="" value="回到第一个item" onclick="goIndex"/>
          <list class="list" onscrollbottom="scrollbottom" id="list" scrollpage="{{scrollPage}}">
            <list-item type="listItem" class="item item_color" for="{{listData}}">
              <text class="txt">{{$item.name}}--{{$idx}}</text>
            </list-item>
            <list-item type="loadMore" class="load-more" if="{{loadMore}}">
              <progress type="circular"></progress>
              <text>加载更多</text>
            </list-item>
          </list>
        </div>
      </tab-content>
    </tabs>
  </div>
</template>

<script>
  export default {
    private: {
      componentName: 'tabs',
      time: '',
      loadMore: true,
      scrollPage: false,
      scrollable: true,
      listData: [
        { name: 'A' },
        { name: 'B' },
        { name: 'C' },
        { name: 'D' }
      ]
    },
    onInit () {
      this.$page.setTitleBar({text: 'Tabs'})
      // 初始化time
      this.time = new Date().getHours() + ':' + new Date().getMinutes()
    },
    changeTabactive (e) {
      // 切换tab
      console.info('切换tab: ' + e.index)
    },
    setTime (e) {
      // time picker选择值后设置time
      this.time = e.hour + ':' + e.minute
    },
    scrollbottom () {
      const self = this
      // list滚动到底部事件
      setTimeout(function () {
        self.listData = self.listData.concat([{name: 'A'}, {name: 'B'}, {name: 'C'}, {name: 'D'}])
      }, 1000)
    },
    goIndex () {
      // list滚动到指定index位置
      this.$element('list').scrollTo({index: 0, smooth: true})
    },
    switchScrollMode () {
      // 切换滚动模式
      this.goIndex()
      this.scrollPage = !this.scrollPage
    },
    switchScrollable (e) {
      // 设置是否可以通过用户滑动切换页面
      this.scrollable = e.checked
    }
  }
</script>

<style>
  @import '../../../common/css/common.css';

  .tabs {
    flex: 1;
    margin-top: 20px;
    margin-right: 30px;
    margin-left: 30px;
    background-color: #ffffff;
  }
  .tab-content {
    flex: 1;
  }
  .tab-bar {
    height: 100px;
    border-color: #bbbbbb;
    color: #bbbbbb;
    border-bottom-width: 1px;
  }
  .tab-text {
    text-align: center;
  }
  .tab-text:active {
    color: #f76160;
  }
  .item-container {
    padding-top: 30px;
    padding-left: 30px;
    padding-right: 30px;
    flex-direction: column;
  }
  .item-content {
    flex-direction: column;
    padding-bottom: 30px;
  }
  .item-title {
    padding-top: 50px;
    padding-bottom: 20px;
    color: #aaaaaa;
  }
  .item-title-first {
    padding-top: 0px;
  }
  .item-input {
    height: 80px;
    margin-right: 60px;
    margin-left: 60px;
    padding: 20px;
    border-width: 1px;
    border-color: #bbbbbb;
    border-radius: 5px;
    font-size: 30px;
  }
  .item-picker {
    margin-right: 60px;
    margin-left: 60px;
    padding: 20px;
    border-width: 1px;
    border-color: #bbbbbb;
    border-radius: 5px;
  }
  .item-slider {
    padding: 20px;
  }
  .circular {
    width: 40px;
    height: 40px;
  }
  .list {
    flex: 1;
  }
  .load-more {
    justify-content: center;
    align-items: center;
    height: 100px;
  }
  .item {
    height: 150px;
    align-items: center;
    justify-content: center;
    margin-bottom: 15px;
  }
  .item_color {
    background-color: #f76160;
  }
  .switch-content {
    flex-direction: row;
    margin-left: 30px;
    margin-right: 30px;
  }
  .item-content-title {
    flex: 1;
    padding-top: 20px;
    padding-bottom: 20px;
  }
  .switch {
    height: 50px;
    width: 320px;
  }
</style>
