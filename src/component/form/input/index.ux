<template>
    <div class="doc-page">
      <div class="page-title-wrap">
        <text class="page-title">{{componentName}}</text>
      </div>

      <!-- 各种类型的input示例 -->
      <div class="input-item">
        <text class="input-hint">input type="text"</text>
        <input class="input-text" type="text" placeholder="请输入text" onchange="showChangePrompt"></input>
      </div>

      <div class="input-item">
        <text class="input-hint">input type="email"</text>
        <input class="input-text" type="email" placeholder="请输入email" onchange="showChangePrompt"></input>
      </div>

      <div class="input-item">
        <text class="input-hint">input type="date"</text>
        <input class="input-text" type="date" placeholder="请输入date" onchange="showChangePrompt"></input>
      </div>

      <div class="input-item">
        <text class="input-hint">input type="time"</text>
        <input class="input-text" type="time" placeholder="请输入time" onchange="showChangePrompt"></input>
      </div>

      <div class="input-item">
        <text class="input-hint">input type="number"</text>
        <input class="input-text" type="number" placeholder="请输入number" onchange="showChangePrompt"></input>
      </div>

      <div class="input-item">
        <text class="input-hint">input type="password"</text>
        <input class="input-text" type="password" placeholder="请输入password" onchange="showChangePrompt"></input>
      </div>

      <div class="input-item">
        <text class="input-hint">input type="tel"</text>
        <input class="input-text" type="tel" autocomplete="on" placeholder="请输入手机号" onchange="showChangePrompt"></input>
      </div>

      <div class="input-item">
        <text class="input-hint">设置 maxlength 为5</text>
        <input class="input-text" type="text" placeholder="只能输入5个字符" onchange="showChangePrompt" maxlength="5"></input>
      </div>

      <!-- 示范input的相关select方法 -->
      <div class="input-item">
        <text class="input-hint">示范input的相关select方法 (textarea也有同类方法)</text>
        <input class="input-text" type="text" value="这里有一段文字" id="input" style="margin-bottom:20px;" onselectionchange="onSelectionChange"></input>
        <div class="doc-row">
          <input class="input-button input-button-first color-1" type="button" value="选中全部" onclick="selectAll"></input>
          <input class="input-button color-2" type="button" value="选中部分" onclick="selectPart"></input>
          <input class="input-button color-3" type="button" value="获取选中区域" onclick="getSelect"></input>
        </div>
      </div>

      <!-- 单选框 -->
      <div class="input-item">
        <text class="input-hint">input type="radio":</text>
        <div class="doc-row">
          <label target="radio1">label1:</label>
          <input id="radio1" class="flex-grow" type="radio" name="radio" value="radio1"
                 onchange="showChangePrompt"></input>
          <label target="radio2">label2:</label>
          <input id="radio2" class="flex-grow" type="radio" name="radio" value="radio2" checked="true"
                 onchange="showChangePrompt"></input>
          <label target="radio3">label3:</label>
          <input id="radio3" class="flex-grow" type="radio" name="radio" value="radio3"
                 onchange="showChangePrompt"></input>
        </div>
      </div>

      <!-- 复选框 -->
      <div class="input-item">
        <text class="input-hint">input type="checkbox":</text>
        <div class="doc-row">
          <label target="checkbox1">label1:</label>
          <input id="checkbox1" class="flex-grow" type="checkbox" name="checkbox" value="checkbox1"
                 onchange="showChangePrompt"></input>
          <label target="checkbox2">label2:</label>
          <input id="checkbox2" class="flex-grow" type="checkbox" name="checkbox" value="checkbox2" checked="true"
                 onchange="showChangePrompt"></input>
          <label target="checkbox3">label3:</label>
          <input id="checkbox3" class="flex-grow" type="checkbox" name="checkbox" value="checkbox3"
                 onchange="showChangePrompt"></input>
        </div>
      </div>

      <!-- 按钮 -->
      <div class="input-item">
        <text class="input-hint">input type="button"</text>
        <div class="doc-row">
          <input class="input-button input-button-first color-1" type="button" value="确认"
                 onclick="showClickPrompt('确认')"></input>
          <input class="input-button color-2" type="button" value="取消" onclick="showClickPrompt('取消')"></input>
          <input class="input-button color-3" type="button" value="提交" onclick="showClickPrompt('提交')"></input>
        </div>
      </div>

      <!-- 设置或清空输入框的值示例．注意: 必须在input的change事件中同步value的变量值 -->
      <div class="input-item">
        <text class="input-hint">设置或清空输入框的值：</text>
        <input class="input-text" type="text" placeholder="必须在change事件中同步value才能改变value" value="{{inputValue}}"
               onchange="updateValue"></input>
        <div class="doc-row" style="margin-top: 30px;">
          <input class="input-button input-button-first color-3" type="button" value="设置value值" onclick="setValue"></input>
          <input class="input-button color-3" type="button" value="清空value值" onclick="resetValue"></input>
        </div>
      </div>

      <!-- 设置input占位符颜色的示例 -->
      <div class="input-item">
        <text class="input-hint">控制占位符颜色的input:</text>
        <input class="input-text" type="text" placeholder="占位符字体是红色的" style="placeholder-color: #FF0000"></input>
      </div>

      <!-- input组件支持动态切换type类型 -->
      <div class="input-item">
        <text class="input-hint">点击改变InputType按钮，可将下面输入框的InputType切换为password形式</text>
        <input class="input-text" type="{{inputType}}" value="123456" /></input>
        <div class="doc-row" style="margin-top: 30px;">
          <input class="input-button color-1" type="button" value="改变InputType" onclick="changeInputType" /></input>
        </div>
      </div>
    </div>
  </template>

  <script>
    import prompt from '@system.prompt'

    export default {
      private: {
        componentName: 'input',
        inputValue: '',
        inputType: 'text'
      },
      onInit () {
        this.$page.setTitleBar({text: 'Input'})
      },
      changeInputType () {
        if (this.inputType === 'text') {
          this.inputType = 'password'
        } else {
          this.inputType = 'text'
        }
      },
      updateValue (e) {
        this.inputValue = e.text
      },
      setValue () {
        this.inputValue = 'Hello, world!'
      },
      resetValue () {
        this.inputValue = ''
      },
      showChangePrompt (e) {
        prompt.showToast({
          message: (e.name === undefined ? '' : '---name: ' + e.name)
          + (e.value === undefined ? '' : '---value: ' + e.value)
          + (e.checked === undefined ? '' : '---checked: ' + e.checked)
          + (e.text === undefined ? '' : '---text: ' + e.text)
        })
      },
      showClickPrompt (msg) {
        prompt.showToast({
          message: msg
        })
      },
      selectAll () {
        this.$element('input').select()
      },
      selectPart () {
        this.$element('input').setSelectionRange({
          start: 0,
          end: 3
        })
      },
      getSelect () {
        this.$element('input').getSelectionRange({
          callback: function (start, end) {
            prompt.showToast({
              message: '当前选中区域为：' + start + '~' + end
            })
          }
        })
      },
      // 选中文本发生改变时触发
      onSelectionChange () {
        this.$element('input').getSelectionRange({
          callback: function (start, end) {
            if (end - start > 3) {
              prompt.showToast({
                message: '当前选中文本字符数大于3个'
              })
            }
          }
        })
      }
    }
  </script>

  <style>
    @import '../../../common/css/common.css';

    .input-item {
      margin-bottom: 80px;
      flex-direction: column;
    }
    .input-hint {
      margin-left: 30px;
      margin-bottom: 30px;
      margin-right: 30px;
    }
    .doc-row {
      justify-content: center;
      margin-left: 30px;
      margin-right: 30px;
    }
    .flex-grow {
      flex-grow: 1;
    }
    .input-text {
      height: 80px;
      line-height: 80px;
      padding-left: 30px;
      padding-right: 30px;
      margin-left: 30px;
      margin-right: 30px;
      border-top-width: 1px;
      border-bottom-width: 1px;
      border-color: #999999;
      font-size: 30px;
      background-color: #ffffff;
    }
    .input-text:focus {
      border-color: #f76160;
    }
    .input-button {
      flex: 1;
      padding-top: 10px;
      padding-right: 30px;
      padding-bottom: 10px;
      padding-left: 30px;
      margin-left: 30px;
      font-size: 30px;
      color: #ffffff;
    }
    .input-button-first {
      margin-left: 0px;
    }
    .color-1 {
      background-color: #09ba07;
    }
    .color-1:active {
      background-color: #098807;
    }
    .color-2 {
      background-color: #f76160;
    }
    .color-2:active {
      background-color: #c55756;
    }
    .color-3 {
      background-color: #0faeff;
    }
    .color-3:active {
      background-color: #0f7dcd;
    }
  </style>
