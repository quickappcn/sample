<template>
  <div class="doc-page">
    <div class="page-title-wrap">
      <text class="page-title">{{componentName}}</text>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>可分享的平台：{{platforms}}</text>
      </div>
      <div class="item-content">
        <text class="txt">分享的标题：</text>
        <input type="text" class="input" value="{{title}}" placeholder="请输入分享的标题" onchange="updateTitle"/>
      </div>
      <div class="item-content">
        <text class="txt">分享的摘要：</text>
        <input type="text" class="input" value="{{summary}}" placeholder="请输入分享的摘要" onchange="updateSummary"/>
      </div>
      <input type="button" class="btn" onclick="share" value="点击分享"/>
      <input type="button" class="btn" onclick="shareTo" value="分享到指定平台"/>
    </div>
  </div>
</template>

<script>
  import share from '@service.share'
  import prompt from '@system.prompt'

  export default {
    private: {
      componentName: 'service.share',
      title: '默认标题',
      summary: '默认摘要',
      platforms: ''
    },
    onInit () {
      this.$page.setTitleBar({ text: 'Service Share' })
      this.getAllThePlatforms()
    },
    updateTitle (e) {
      this.title = e.text
    },
    updateSummary (e) {
      this.summary = e.text
    },
    share () {
      const self = this
      share.share({
        shareType: 0,
        title: self.title,
        summary: self.summary,
        targetUrl: 'https://www.quickapp.cn/',
        fail: function (erromsg, errocode) {
          console.info(`### share.share ### ${errocode}: ${erromsg}`)
          prompt.showToast({
            message: `${errocode}: ${erromsg}`
          })
        }
      })
    },
    shareTo () {
      const self = this
      share.share({
        shareType: 0,
        title: self.title,
        summary: self.summary,
        targetUrl: 'https://www.quickapp.cn/',
        platforms: ['SYSTEM'],
        fail: function (erromsg, errocode) {
          console.info(`### share.share ### ${errocode}: ${erromsg}`)
          prompt.showToast({
            message: `${errocode}: ${erromsg}`
          })
        }
      })
    },
    getAllThePlatforms ()  {
      const self = this
      share.getAvailablePlatforms({
        success: function(data) {
          self.platforms = data.platforms.join(',')
        },
        fail: function(data, code) {
          console.info(`### "handling fail ### code: ${ code }`)
        }
      })
    }
  }
</script>

<style>
  @import '../../../common/css/common.css';

  .item-container {
    margin-bottom: 50px;
    margin-right: 60px;
    margin-left: 60px;
    flex-direction: column;
  }
  .item-content {
    background-color: #ffffff;
    padding: 30px;
    margin-bottom: 50px;
    align-items: center;
  }
  .txt {
    width: 200px;
    text-align: right;
  }
  .input {
    flex: 1;
    font-size: 30px;
  }
</style>
