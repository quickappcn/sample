<template>
  <div class="doc-page">
    <div class="page-title-wrap">
      <text class="page-title">{{componentName}}</text>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>windowWidth(可用宽度):</text>
        <text>{{windowWidth}}</text>
      </div>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>windowHeight(可用高度):</text>
        <text>{{windowHeight}}</text>
      </div>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>statusBarHeight(通知栏高度):</text>
        <text>{{statusBarHeight}}</text>
      </div>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>设备信息:</text>
        <text>{{deviceInfo}}</text>
      </div>
      <input type="button" class="btn" onclick="getDeviceInfo" value="获取设备信息"/>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>批量获取设备标识:</text>
        <text>{{deviceIdList}}</text>
      </div>
      <input type="button" class="btn" onclick="getDeviceIdList" value="批量获取设备标识"/>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>设备Id:</text>
        <text>{{deviceId}}</text>
      </div>
      <input type="button" class="btn" onclick="getDeviceId" value="获取设备唯一标识"/>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>获取用户唯一标识:</text>
        <text>{{userId}}</text>
      </div>
      <input type="button" class="btn" onclick="getUserId" value="获取用户唯一标识"/>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>获取设备序列号:</text>
        <text>{{serial}}</text>
      </div>
      <input type="button" class="btn" onclick="getSerial" value="获取设备序列号"/>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>获取广告唯一标识:</text>
        <text>{{advertisingId}}</text>
      </div>
      <input type="button" class="btn" onclick="getAdvertisingId" value="获取广告唯一标识"/>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>获取存储空间的总大小:</text>
        <text>{{totalStorage}}</text>
      </div>
      <input type="button" class="btn" onclick="getTotalStorage" value="获取存储空间的总大小"/>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>获取存储空间的可用大小:</text>
        <text>{{availableStorage}}</text>
      </div>
      <input type="button" class="btn" onclick="getAvailableStorage" value="获取存储空间的可用大小"/>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text>CPU信息:</text>
        <text>{{cpuInfo}}</text>
      </div>
      <input type="button" class="btn" onclick="getCpuInfo" value="获取CPU信息"/>
    </div>
    <div class="item-container">
      <div class="item-content">
        <text>平台版本信息:</text>
        <text>{{platformInfo}}</text>
      </div>
      <input type="button" class="btn" onclick="getPlatformInfo" value="同步方法获取平台版本信息"/>
    </div>
  </div>
</template>

<script>
  import device from '@system.device'

  export default {
    private: {
      componentName: 'Device',
      deviceInfo: '',
      deviceIdList: '',
      deviceId: '',
      userId: '',
      serial: '',
      advertisingId: '',
      totalStorage: '',
      availableStorage: '',
      cpuInfo: '',
      platformInfo: '',
      windowWidth: 0,
      windowHeight: 0,
      statusBarHeight: 0
    },
    onInit () {
      this.$page.setTitleBar({text: '设备信息'})
    },
    onShow() {
      device.getInfo({
        success: (ret) => {
          this.windowWidth = ret.windowWidth
          this.windowHeight = ret.windowHeight
          this.statusBarHeight = ret.statusBarHeight
        },
        fail: (data, code) => {
          console.log(`getinfo handling fail, code = ${code}`)
        }
      })
    },
    getDeviceInfo () {
      const self = this
      device.getInfo({
        success: function (data) {
          self.deviceInfo = JSON.stringify(data)
        }
      })
    },
    getDeviceIdList () {
      const self = this
      device.getId({
        type: ['device', 'mac', 'user'],
        success: function (data) {
          self.deviceIdList = JSON.stringify(data)
        },
        fail: function (data, code) {
          self.deviceIdList = 'handling fail, code=' + code
        }
      })
    },
    getDeviceId () {
      const self = this
      device.getDeviceId({
        success: function (data) {
          self.deviceId =  JSON.stringify(data)
        },
        fail: function (data, code) {
          self.deviceId = 'handling fail, code=' + code
        }
      })
    },
    getUserId () {
      const self = this
      device.getUserId({
        success: function (data) {
          self.userId = JSON.stringify(data)
        },
        fail: function (data, code) {
          self.userId = 'handling fail, code=' + code
        }
      })
    },
    getSerial () {
      const self = this
      device.getSerial({
        success: function (data) {
          self.serial = JSON.stringify(data)
        },
        fail: function (data, code) {
          self.serial = 'handling fail, code=' + code
        }
      })
    },
    getAdvertisingId () {
      const self = this
      device.getAdvertisingId({
        success: function (data) {
          self.advertisingId = JSON.stringify(data)
        },
        fail: function (data, code) {
          self.advertisingId  = 'handling fail, code=' + code
        }
      })
    },
    getTotalStorage () {
      const self = this
      device.getTotalStorage({
        success: function (data) {
          self.totalStorage = JSON.stringify(data)
        },
        fail: function(data, code) {
          self.totalStorage = 'handling fail, code=' + code
        }
      })
    },
    getAvailableStorage () {
      const self = this
      device.getAvailableStorage({
        success: function (data) {
          self.availableStorage = JSON.stringify(data)
        },
        fail: function(data, code) {
          self.availableStorage = 'handling fail, code=' + code
        }
      })
    },
    getCpuInfo () {
      const self = this
      device.getCpuInfo({
        success: function (data) {
          self.cpuInfo = JSON.stringify(data)
        },
        fail: function (data, code) {
          self.cpuInfo = 'handling fail, code=' + code
        }
      })
    },
    getPlatformInfo () {
      const self = this
      var data = device.platform;
      self.platformInfo = JSON.stringify(data)
    }
  }
</script>

<style>
  @import '../../../common/css/common.css';

  .item-container {
    margin-bottom: 50px;
    margin-right: 60px;
    margin-left: 60px;
    flex-direction: column;
  }

  .item-content {
    flex-direction: column;
    background-color: #ffffff;
    padding: 30px;
    margin-bottom: 50px;
    align-items: flex-start;
  }
</style>
