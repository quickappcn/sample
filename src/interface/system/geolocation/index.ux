<template>
  <div class="doc-page">
    <div class="page-title-wrap">
      <text class="page-title">{{componentName}}</text>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text class="txt">设置坐标系类型:</text>
        <div>
          <text class="txt">coordType: </text>
          <select class="selectDom" @change="changeOption">
            <option class="optionDom" for={{objectFitValues}} value="{{$item}}">{{$item}}</option>
          </select>
        </div>
      </div>

      <div class="item-content">
        <text class="txt">获取地理位置:</text>
        <text class="txt">latitude: {{geolocationGetData.latitude}}</text>
        <text class="txt">longitude: {{geolocationGetData.longitude}}</text>
        <text class="txt">accuracy: {{geolocationGetData.accuracy}}</text>
        <text class="txt">time: {{geolocationGetData.time}}</text>
      </div>
      <input type="button" class="btn" onclick="getGeolocation" value="获取地理位置" />

      <div class="item-content">
        <text class="txt">地理位置:</text>
        <text class="txt">latitude: {{geolocationListenData.latitude}}</text>
        <text class="txt">longitude: {{geolocationListenData.longitude}}</text>
        <text class="txt">accuracy: {{geolocationListenData.accuracy}}</text>
        <text class="txt">time: {{geolocationListenData.time}}</text>
      </div>
      <input type="button" class="btn" onclick="listenGeolocation" value="监听地理位置" />
      <input type="button" class="btn" onclick="cancelGeolocation" value="取消地理位置监听" />

      <div class="item-content">
        <text class="txt">定位类型:</text>
        <text class="txt">locationType: {{locationType}}</text>
      </div>
      <input type="button" class="btn" onclick="getGeolocationType" value="获取系统当前支持的定位类型" />

      <div class="item-content">
        <text class="txt">坐标系类型:</text>
        <text class="txt">coordTypes: {{coordTypes}}</text>
      </div>
      <input type="button" class="btn" onclick="getCoordTypes" value="获取当前坐标系类型" />
    </div>
  </div>
</template>

<script>
  import geolocation from '@system.geolocation'
  import prompt from '@system.prompt'

  export default {
    private: {
      componentName: 'geolocation',
      geolocationGetData: {
        latitude: '',
        longitude: '',
        accuracy: '',
        time: ''
      },
      geolocationListenData: {
        latitude: '',
        longitude: '',
        accuracy: '',
        time: ''
      },
      locationType: '',
      coordTypes: '',
      objectFitValues: [
        "gcj02", "wgs84"
      ],
      coordTypeValue: 'gcj02'
    },
    onInit() {
      this.$page.setTitleBar({
        text: 'Geolocation'
      })
    },
    changeOption(e) {
      this.coordTypeValue = e.newValue
      prompt.showToast({
        message: `坐标系类型切换为 ${e.newValue}`
      })
    },
    getCoordTypes() {
      let self = this;
      let SupportedCoordTypesArr = geolocation.getSupportedCoordTypes();
      self.coordTypes = SupportedCoordTypesArr.join()
    },
    getGeolocation() {
      const self = this
      geolocation.getLocation({
        coordType: self.coordTypeValue,
        success: function (ret) {
          self.geolocationGetData = ret
        },
        fail: function (erromsg, errocode) {
          console.info(`### geolocation.getLocation ### ${errocode}: ${erromsg}`)
          prompt.showToast({
            message: `${errocode}: ${erromsg}`
          })
        }
      })
    },
    listenGeolocation() {
      const self = this
      geolocation.subscribe({
        coordType: self.coordTypeValue,
        success: function (ret) {
          self.geolocationListenData = ret
        },
        fail: function (erromsg, errocode) {
          console.info(`### geolocation.subscribe ### ${errocode}: ${erromsg}`)
          prompt.showToast({
            message: `${errocode}: ${erromsg}`
          })
        }
      })
    },
    cancelGeolocation() {
      geolocation.unsubscribe()
    },
    getGeolocationType: function () {
      let self = this;
      geolocation.getLocationType({
        success: function (data) {
          self.locationType = data.types
          console.log(`### handling success ### locationType: ${data.types}`)
        },
        fail: function (data, code) {
          self.locationType = `获取失败，code: ${code}`
          console.log(`### handling fail ### code: ${code}`)
        }
      })
    }
  }
</script>

<style>
  @import '../../../common/css/common.css';

  .item-container {
    margin-bottom: 50px;
    margin-right: 60px;
    margin-left: 60px;
    flex-direction: column;
  }

  .item-content {
    flex-direction: column;
    background-color: #ffffff;
    padding: 30px;
    margin-bottom: 100px;
    align-items: flex-start;
  }

  .item-container {
    margin-top: 20px;
  }

  .selectDom {
    border: 1px solid #333333;
    border-radius: 5px;
    margin-left: 20px;
    margin-top: 10px;
    width: 300px;
  }

  .optionDom {
    padding-top: 20px;
    padding-bottom: 20px;
    padding-left: 20px;
    text-align: center;
  }
</style>