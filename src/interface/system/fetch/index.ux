<template>
  <div class="doc-page">
    <div class="page-title-wrap">
      <text class="page-title">{{componentName}}</text>
    </div>

    <div class="item-container">
      <div class="item-content">
        <text class="txt">{{fetchedData}}</text>
      </div>
      <input type="button" class="btn" onclick="fetchDataUseAsync" value="获取数据"/>
    </div>

    <!-- <div class="item-container">
      <div class="item-content">
        <text class="txt">{{fetchCookieData}}</text>
      </div>
      <input type="button" class="btn" onclick="fetchWithCookie" value="测试2"/>
    </div> -->
  </div>
</template>

<script>
  import fetch from '@system.fetch'
  import prompt from '@system.prompt'

  export default {
    private: {
      componentName: 'fetch',
      fetchedData: 'init',
      fetchCookieData: '无'
    },
    onInit () {
      this.$page.setTitleBar({text: 'Fetch'})
    },
    // 获取数据 - 不使用 async 的写法
    fetchDataNormal () {
      const self = this
      this.fetchedData = 'fetching...'
      fetch.fetch({
        url: 'http://news.baidu.com/widget',
        data: {
          id: 'LocalNews',
          ajax: 'json'
        },
        responseType: 'json',// 支持返回类型是text、json、file和arraybuffer，默认返回字符串文本。
        success: function (ret) {
          // 注意self.fetchedData与ret接收的数据类型保持一致
          // 设置responseType为json类型时，ret.data为json对象
          self.fetchedData = '网络数据(jsonp)：' + JSON.stringify(ret.data)
          prompt.showToast({
            message: 'success'
          })
        }
      })
    },
    // 获取数据 - 使用 async 的写法
    async fetchDataUseAsync () {
      const self = this
      this.fetchedData = 'fetching...'
      //使用 async 的写法
      const ret = await fetch.fetch({
        url: 'http://news.baidu.com/widget',
        data: {
          id: 'LocalNews',
          ajax: 'json'
        },
        responseType: 'json'
      })
      self.fetchedData = '网络数据(jsonp)：' + JSON.stringify(ret.data.data)
      prompt.showToast({
        message: 'success'
      })
    },
    fetchWithCookie () {
      const self = this
      // 修改服务器的IP和端口
      const host = 'IP:PORT'
      const url = `http://${host}/echocookie`
      const header = {
        'Cookie': 'dummy_cookie=foo; yummy_cookie=bar; tasty_cookie=strawberry'
      }
      fetch.fetch({
        url,
        header,
        method: 'GET',
        success(resData) {
          self.fetchCookieData = '网络数据(json):' + JSON.stringify(resData)
          prompt.showToast({
            message: 'success'
          })
        }
      })
    }
  }
</script>

<style>
  @import '../../../common/css/common.css';

  .item-container {
    margin-bottom: 50px;
    margin-right: 60px;
    margin-left: 60px;
    flex-direction: column;
  }

  .item-content {
    flex-direction: column;
    background-color: #ffffff;
    padding: 30px;
    margin-bottom: 50px;
    align-items: center;
    justify-content: center;
  }

  .txt {
    line-height: 45px;
    padding-top: 15px;
    padding-bottom: 15px;
  }
</style>
